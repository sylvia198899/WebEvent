//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// 此原始程式碼由 wsdl 版本=2.0.50727.42 自動產生。
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="EventService06Soap", Namespace="http://tempuri.org/")]
public partial class EventService06 : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback GetServiceAccountCreateTimeOperationCompleted;
    
    private System.Threading.SendOrPostCallback EventInfo_CreateOperationCompleted;
    
    private System.Threading.SendOrPostCallback EventInfo_GetOperationCompleted;
    
    private System.Threading.SendOrPostCallback EventJob_GetOperationCompleted;
    
    /// <remarks/>
    public EventService06() {
        //this.Url = "https://tw.gashws.gamania.com/Event/EventWS/EventService06.asmx";
        this.Url = "https://tw.webservices.beanfun.com/EventWS/EventService06.asmx";
    }
    
    /// <remarks/>
    public event GetServiceAccountCreateTimeCompletedEventHandler GetServiceAccountCreateTimeCompleted;
    
    /// <remarks/>
    public event EventInfo_CreateCompletedEventHandler EventInfo_CreateCompleted;
    
    /// <remarks/>
    public event EventInfo_GetCompletedEventHandler EventInfo_GetCompleted;
    
    /// <remarks/>
    public event EventJob_GetCompletedEventHandler EventJob_GetCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServiceAccountCreateTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int GetServiceAccountCreateTime(string strServiceCode, string strServiceRegion, string strServiceAccountID, out System.DateTime strCreateTime, out string strFlag, out string strOutString) {
        object[] results = this.Invoke("GetServiceAccountCreateTime", new object[] {
                    strServiceCode,
                    strServiceRegion,
                    strServiceAccountID});
        strCreateTime = ((System.DateTime)(results[1]));
        strFlag = ((string)(results[2]));
        strOutString = ((string)(results[3]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetServiceAccountCreateTime(string strServiceCode, string strServiceRegion, string strServiceAccountID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetServiceAccountCreateTime", new object[] {
                    strServiceCode,
                    strServiceRegion,
                    strServiceAccountID}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndGetServiceAccountCreateTime(System.IAsyncResult asyncResult, out System.DateTime strCreateTime, out string strFlag, out string strOutString) {
        object[] results = this.EndInvoke(asyncResult);
        strCreateTime = ((System.DateTime)(results[1]));
        strFlag = ((string)(results[2]));
        strOutString = ((string)(results[3]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void GetServiceAccountCreateTimeAsync(string strServiceCode, string strServiceRegion, string strServiceAccountID) {
        this.GetServiceAccountCreateTimeAsync(strServiceCode, strServiceRegion, strServiceAccountID, null);
    }
    
    /// <remarks/>
    public void GetServiceAccountCreateTimeAsync(string strServiceCode, string strServiceRegion, string strServiceAccountID, object userState) {
        if ((this.GetServiceAccountCreateTimeOperationCompleted == null)) {
            this.GetServiceAccountCreateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceAccountCreateTimeOperationCompleted);
        }
        this.InvokeAsync("GetServiceAccountCreateTime", new object[] {
                    strServiceCode,
                    strServiceRegion,
                    strServiceAccountID}, this.GetServiceAccountCreateTimeOperationCompleted, userState);
    }
    
    private void OnGetServiceAccountCreateTimeOperationCompleted(object arg) {
        if ((this.GetServiceAccountCreateTimeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetServiceAccountCreateTimeCompleted(this, new GetServiceAccountCreateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EventInfo_Create", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet EventInfo_Create(string strEventName, string strServiceCode, string strServiceRegion, string strStartTime, string strEndTime, string strCreator) {
        object[] results = this.Invoke("EventInfo_Create", new object[] {
                    strEventName,
                    strServiceCode,
                    strServiceRegion,
                    strStartTime,
                    strEndTime,
                    strCreator});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginEventInfo_Create(string strEventName, string strServiceCode, string strServiceRegion, string strStartTime, string strEndTime, string strCreator, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("EventInfo_Create", new object[] {
                    strEventName,
                    strServiceCode,
                    strServiceRegion,
                    strStartTime,
                    strEndTime,
                    strCreator}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndEventInfo_Create(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void EventInfo_CreateAsync(string strEventName, string strServiceCode, string strServiceRegion, string strStartTime, string strEndTime, string strCreator) {
        this.EventInfo_CreateAsync(strEventName, strServiceCode, strServiceRegion, strStartTime, strEndTime, strCreator, null);
    }
    
    /// <remarks/>
    public void EventInfo_CreateAsync(string strEventName, string strServiceCode, string strServiceRegion, string strStartTime, string strEndTime, string strCreator, object userState) {
        if ((this.EventInfo_CreateOperationCompleted == null)) {
            this.EventInfo_CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventInfo_CreateOperationCompleted);
        }
        this.InvokeAsync("EventInfo_Create", new object[] {
                    strEventName,
                    strServiceCode,
                    strServiceRegion,
                    strStartTime,
                    strEndTime,
                    strCreator}, this.EventInfo_CreateOperationCompleted, userState);
    }
    
    private void OnEventInfo_CreateOperationCompleted(object arg) {
        if ((this.EventInfo_CreateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.EventInfo_CreateCompleted(this, new EventInfo_CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EventInfo_Get", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet EventInfo_Get(string strEventID) {
        object[] results = this.Invoke("EventInfo_Get", new object[] {
                    strEventID});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginEventInfo_Get(string strEventID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("EventInfo_Get", new object[] {
                    strEventID}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndEventInfo_Get(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void EventInfo_GetAsync(string strEventID) {
        this.EventInfo_GetAsync(strEventID, null);
    }
    
    /// <remarks/>
    public void EventInfo_GetAsync(string strEventID, object userState) {
        if ((this.EventInfo_GetOperationCompleted == null)) {
            this.EventInfo_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventInfo_GetOperationCompleted);
        }
        this.InvokeAsync("EventInfo_Get", new object[] {
                    strEventID}, this.EventInfo_GetOperationCompleted, userState);
    }
    
    private void OnEventInfo_GetOperationCompleted(object arg) {
        if ((this.EventInfo_GetCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.EventInfo_GetCompleted(this, new EventInfo_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EventJob_Get", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet EventJob_Get(string strEventID, string strMainAccountID, string strServiceAccountID, string strSTime, string strETime) {
        object[] results = this.Invoke("EventJob_Get", new object[] {
                    strEventID,
                    strMainAccountID,
                    strServiceAccountID,
                    strSTime,
                    strETime});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginEventJob_Get(string strEventID, string strMainAccountID, string strServiceAccountID, string strSTime, string strETime, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("EventJob_Get", new object[] {
                    strEventID,
                    strMainAccountID,
                    strServiceAccountID,
                    strSTime,
                    strETime}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndEventJob_Get(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void EventJob_GetAsync(string strEventID, string strMainAccountID, string strServiceAccountID, string strSTime, string strETime) {
        this.EventJob_GetAsync(strEventID, strMainAccountID, strServiceAccountID, strSTime, strETime, null);
    }
    
    /// <remarks/>
    public void EventJob_GetAsync(string strEventID, string strMainAccountID, string strServiceAccountID, string strSTime, string strETime, object userState) {
        if ((this.EventJob_GetOperationCompleted == null)) {
            this.EventJob_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventJob_GetOperationCompleted);
        }
        this.InvokeAsync("EventJob_Get", new object[] {
                    strEventID,
                    strMainAccountID,
                    strServiceAccountID,
                    strSTime,
                    strETime}, this.EventJob_GetOperationCompleted, userState);
    }
    
    private void OnEventJob_GetOperationCompleted(object arg) {
        if ((this.EventJob_GetCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.EventJob_GetCompleted(this, new EventJob_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void GetServiceAccountCreateTimeCompletedEventHandler(object sender, GetServiceAccountCreateTimeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetServiceAccountCreateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetServiceAccountCreateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public System.DateTime strCreateTime {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.DateTime)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string strFlag {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public string strOutString {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[3]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void EventInfo_CreateCompletedEventHandler(object sender, EventInfo_CreateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class EventInfo_CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal EventInfo_CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void EventInfo_GetCompletedEventHandler(object sender, EventInfo_GetCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class EventInfo_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal EventInfo_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void EventJob_GetCompletedEventHandler(object sender, EventJob_GetCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class EventJob_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal EventJob_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}
