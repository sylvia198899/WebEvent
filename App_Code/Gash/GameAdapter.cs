//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.3625
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// 此原始程式碼由 wsdl 版本=2.0.50727.42 自動產生。
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="GameAdapterSoap", Namespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/")]
public partial class GameAdapter : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback ServiceAccountID_CreateOperationCompleted;
    
    private System.Threading.SendOrPostCallback ServiceAccountID_UpdateOperationCompleted;
    
    private System.Threading.SendOrPostCallback ServiceAccountID_LockOperationCompleted;
    
    private System.Threading.SendOrPostCallback ThirdParty_GetAliasAccountIDOperationCompleted;
    
    private System.Threading.SendOrPostCallback ThirdParty_GetServiceAccountIDOperationCompleted;
    
    private System.Threading.SendOrPostCallback ThirdParty_CheckLaunchParametersOperationCompleted;
    
    private System.Threading.SendOrPostCallback ThirdParty_GetStartURLOperationCompleted;
    
    private System.Threading.SendOrPostCallback ThirdParty_GetDepositURLOperationCompleted;
    
    private System.Threading.SendOrPostCallback ThirdParty_GetServiceNameOperationCompleted;
    
    private System.Threading.SendOrPostCallback ThirdParty_CheckServiceOperationCompleted;
    
    private System.Threading.SendOrPostCallback ThirdParty_GetMainServiceCodeOperationCompleted;
    
    private System.Threading.SendOrPostCallback ThirdParty_CheckLoginOTP1OperationCompleted;
    
    private System.Threading.SendOrPostCallback ThirdParty_LoginOTP2InsertOperationCompleted;
    
    private System.Threading.SendOrPostCallback ThirdParty_LoginOTP1GetReturnUrlOperationCompleted;
    
    /// <remarks/>
    public GameAdapter() {
        this.Url = "https://tw.webservices.beanfun.com/TW_ThirdPartyAdapter/GameAdapter.asmx";  //正式
        //this.Url = "http://tw.webservices.beanfun.com/TW_ThirdPartyAdapter/GameAdapter.asmx";  //avtw
        //this.Url = "http://202.80.108.42/TW_ThirdPartyAdapter/GameAdapter.asmx";    //alpha機
    }
    
    /// <remarks/>
    public event ServiceAccountID_CreateCompletedEventHandler ServiceAccountID_CreateCompleted;
    
    /// <remarks/>
    public event ServiceAccountID_UpdateCompletedEventHandler ServiceAccountID_UpdateCompleted;
    
    /// <remarks/>
    public event ServiceAccountID_LockCompletedEventHandler ServiceAccountID_LockCompleted;
    
    /// <remarks/>
    public event ThirdParty_GetAliasAccountIDCompletedEventHandler ThirdParty_GetAliasAccountIDCompleted;
    
    /// <remarks/>
    public event ThirdParty_GetServiceAccountIDCompletedEventHandler ThirdParty_GetServiceAccountIDCompleted;
    
    /// <remarks/>
    public event ThirdParty_CheckLaunchParametersCompletedEventHandler ThirdParty_CheckLaunchParametersCompleted;
    
    /// <remarks/>
    public event ThirdParty_GetStartURLCompletedEventHandler ThirdParty_GetStartURLCompleted;
    
    /// <remarks/>
    public event ThirdParty_GetDepositURLCompletedEventHandler ThirdParty_GetDepositURLCompleted;
    
    /// <remarks/>
    public event ThirdParty_GetServiceNameCompletedEventHandler ThirdParty_GetServiceNameCompleted;
    
    /// <remarks/>
    public event ThirdParty_CheckServiceCompletedEventHandler ThirdParty_CheckServiceCompleted;
    
    /// <remarks/>
    public event ThirdParty_GetMainServiceCodeCompletedEventHandler ThirdParty_GetMainServiceCodeCompleted;
    
    /// <remarks/>
    public event ThirdParty_CheckLoginOTP1CompletedEventHandler ThirdParty_CheckLoginOTP1Completed;
    
    /// <remarks/>
    public event ThirdParty_LoginOTP2InsertCompletedEventHandler ThirdParty_LoginOTP2InsertCompleted;
    
    /// <remarks/>
    public event ThirdParty_LoginOTP1GetReturnUrlCompletedEventHandler ThirdParty_LoginOTP1GetReturnUrlCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tw.beanfun.gamania.com/ThirdPartyAdapter/ServiceAccountID_Create", RequestNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", ResponseNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Result ServiceAccountID_Create(string ServiceCode, string ServiceRegion, string ServiceAccountID, string DisplayName) {
        object[] results = this.Invoke("ServiceAccountID_Create", new object[] {
                    ServiceCode,
                    ServiceRegion,
                    ServiceAccountID,
                    DisplayName});
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginServiceAccountID_Create(string ServiceCode, string ServiceRegion, string ServiceAccountID, string DisplayName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ServiceAccountID_Create", new object[] {
                    ServiceCode,
                    ServiceRegion,
                    ServiceAccountID,
                    DisplayName}, callback, asyncState);
    }
    
    /// <remarks/>
    public Result EndServiceAccountID_Create(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public void ServiceAccountID_CreateAsync(string ServiceCode, string ServiceRegion, string ServiceAccountID, string DisplayName) {
        this.ServiceAccountID_CreateAsync(ServiceCode, ServiceRegion, ServiceAccountID, DisplayName, null);
    }
    
    /// <remarks/>
    public void ServiceAccountID_CreateAsync(string ServiceCode, string ServiceRegion, string ServiceAccountID, string DisplayName, object userState) {
        if ((this.ServiceAccountID_CreateOperationCompleted == null)) {
            this.ServiceAccountID_CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceAccountID_CreateOperationCompleted);
        }
        this.InvokeAsync("ServiceAccountID_Create", new object[] {
                    ServiceCode,
                    ServiceRegion,
                    ServiceAccountID,
                    DisplayName}, this.ServiceAccountID_CreateOperationCompleted, userState);
    }
    
    private void OnServiceAccountID_CreateOperationCompleted(object arg) {
        if ((this.ServiceAccountID_CreateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ServiceAccountID_CreateCompleted(this, new ServiceAccountID_CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tw.beanfun.gamania.com/ThirdPartyAdapter/ServiceAccountID_Update", RequestNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", ResponseNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Result ServiceAccountID_Update(string ServiceCode, string ServiceRegion, string ServiceAccountID, string OTP) {
        object[] results = this.Invoke("ServiceAccountID_Update", new object[] {
                    ServiceCode,
                    ServiceRegion,
                    ServiceAccountID,
                    OTP});
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginServiceAccountID_Update(string ServiceCode, string ServiceRegion, string ServiceAccountID, string OTP, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ServiceAccountID_Update", new object[] {
                    ServiceCode,
                    ServiceRegion,
                    ServiceAccountID,
                    OTP}, callback, asyncState);
    }
    
    /// <remarks/>
    public Result EndServiceAccountID_Update(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public void ServiceAccountID_UpdateAsync(string ServiceCode, string ServiceRegion, string ServiceAccountID, string OTP) {
        this.ServiceAccountID_UpdateAsync(ServiceCode, ServiceRegion, ServiceAccountID, OTP, null);
    }
    
    /// <remarks/>
    public void ServiceAccountID_UpdateAsync(string ServiceCode, string ServiceRegion, string ServiceAccountID, string OTP, object userState) {
        if ((this.ServiceAccountID_UpdateOperationCompleted == null)) {
            this.ServiceAccountID_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceAccountID_UpdateOperationCompleted);
        }
        this.InvokeAsync("ServiceAccountID_Update", new object[] {
                    ServiceCode,
                    ServiceRegion,
                    ServiceAccountID,
                    OTP}, this.ServiceAccountID_UpdateOperationCompleted, userState);
    }
    
    private void OnServiceAccountID_UpdateOperationCompleted(object arg) {
        if ((this.ServiceAccountID_UpdateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ServiceAccountID_UpdateCompleted(this, new ServiceAccountID_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tw.beanfun.gamania.com/ThirdPartyAdapter/ServiceAccountID_Lock", RequestNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", ResponseNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Result ServiceAccountID_Lock(string ServiceCode, string ServiceRegion, string ServiceAccountID) {
        object[] results = this.Invoke("ServiceAccountID_Lock", new object[] {
                    ServiceCode,
                    ServiceRegion,
                    ServiceAccountID});
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginServiceAccountID_Lock(string ServiceCode, string ServiceRegion, string ServiceAccountID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ServiceAccountID_Lock", new object[] {
                    ServiceCode,
                    ServiceRegion,
                    ServiceAccountID}, callback, asyncState);
    }
    
    /// <remarks/>
    public Result EndServiceAccountID_Lock(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public void ServiceAccountID_LockAsync(string ServiceCode, string ServiceRegion, string ServiceAccountID) {
        this.ServiceAccountID_LockAsync(ServiceCode, ServiceRegion, ServiceAccountID, null);
    }
    
    /// <remarks/>
    public void ServiceAccountID_LockAsync(string ServiceCode, string ServiceRegion, string ServiceAccountID, object userState) {
        if ((this.ServiceAccountID_LockOperationCompleted == null)) {
            this.ServiceAccountID_LockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceAccountID_LockOperationCompleted);
        }
        this.InvokeAsync("ServiceAccountID_Lock", new object[] {
                    ServiceCode,
                    ServiceRegion,
                    ServiceAccountID}, this.ServiceAccountID_LockOperationCompleted, userState);
    }
    
    private void OnServiceAccountID_LockOperationCompleted(object arg) {
        if ((this.ServiceAccountID_LockCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ServiceAccountID_LockCompleted(this, new ServiceAccountID_LockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tw.beanfun.gamania.com/ThirdPartyAdapter/ThirdParty_GetAliasAccountID", RequestNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", ResponseNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Result ThirdParty_GetAliasAccountID(string strServiceAccountID, string strServiceCode, string strServiceRegion) {
        object[] results = this.Invoke("ThirdParty_GetAliasAccountID", new object[] {
                    strServiceAccountID,
                    strServiceCode,
                    strServiceRegion});
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginThirdParty_GetAliasAccountID(string strServiceAccountID, string strServiceCode, string strServiceRegion, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ThirdParty_GetAliasAccountID", new object[] {
                    strServiceAccountID,
                    strServiceCode,
                    strServiceRegion}, callback, asyncState);
    }
    
    /// <remarks/>
    public Result EndThirdParty_GetAliasAccountID(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public void ThirdParty_GetAliasAccountIDAsync(string strServiceAccountID, string strServiceCode, string strServiceRegion) {
        this.ThirdParty_GetAliasAccountIDAsync(strServiceAccountID, strServiceCode, strServiceRegion, null);
    }
    
    /// <remarks/>
    public void ThirdParty_GetAliasAccountIDAsync(string strServiceAccountID, string strServiceCode, string strServiceRegion, object userState) {
        if ((this.ThirdParty_GetAliasAccountIDOperationCompleted == null)) {
            this.ThirdParty_GetAliasAccountIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThirdParty_GetAliasAccountIDOperationCompleted);
        }
        this.InvokeAsync("ThirdParty_GetAliasAccountID", new object[] {
                    strServiceAccountID,
                    strServiceCode,
                    strServiceRegion}, this.ThirdParty_GetAliasAccountIDOperationCompleted, userState);
    }
    
    private void OnThirdParty_GetAliasAccountIDOperationCompleted(object arg) {
        if ((this.ThirdParty_GetAliasAccountIDCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ThirdParty_GetAliasAccountIDCompleted(this, new ThirdParty_GetAliasAccountIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tw.beanfun.gamania.com/ThirdPartyAdapter/ThirdParty_GetServiceAccountID", RequestNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", ResponseNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Result ThirdParty_GetServiceAccountID(string strAliasAccountID, string strServiceCode, string strServiceRegion) {
        object[] results = this.Invoke("ThirdParty_GetServiceAccountID", new object[] {
                    strAliasAccountID,
                    strServiceCode,
                    strServiceRegion});
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginThirdParty_GetServiceAccountID(string strAliasAccountID, string strServiceCode, string strServiceRegion, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ThirdParty_GetServiceAccountID", new object[] {
                    strAliasAccountID,
                    strServiceCode,
                    strServiceRegion}, callback, asyncState);
    }
    
    /// <remarks/>
    public Result EndThirdParty_GetServiceAccountID(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public void ThirdParty_GetServiceAccountIDAsync(string strAliasAccountID, string strServiceCode, string strServiceRegion) {
        this.ThirdParty_GetServiceAccountIDAsync(strAliasAccountID, strServiceCode, strServiceRegion, null);
    }
    
    /// <remarks/>
    public void ThirdParty_GetServiceAccountIDAsync(string strAliasAccountID, string strServiceCode, string strServiceRegion, object userState) {
        if ((this.ThirdParty_GetServiceAccountIDOperationCompleted == null)) {
            this.ThirdParty_GetServiceAccountIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThirdParty_GetServiceAccountIDOperationCompleted);
        }
        this.InvokeAsync("ThirdParty_GetServiceAccountID", new object[] {
                    strAliasAccountID,
                    strServiceCode,
                    strServiceRegion}, this.ThirdParty_GetServiceAccountIDOperationCompleted, userState);
    }
    
    private void OnThirdParty_GetServiceAccountIDOperationCompleted(object arg) {
        if ((this.ThirdParty_GetServiceAccountIDCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ThirdParty_GetServiceAccountIDCompleted(this, new ThirdParty_GetServiceAccountIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tw.beanfun.gamania.com/ThirdPartyAdapter/ThirdParty_CheckLaunchParameters", RequestNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", ResponseNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Result ThirdParty_CheckLaunchParameters(string strServiceAccountID, string strOTP) {
        object[] results = this.Invoke("ThirdParty_CheckLaunchParameters", new object[] {
                    strServiceAccountID,
                    strOTP});
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginThirdParty_CheckLaunchParameters(string strServiceAccountID, string strOTP, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ThirdParty_CheckLaunchParameters", new object[] {
                    strServiceAccountID,
                    strOTP}, callback, asyncState);
    }
    
    /// <remarks/>
    public Result EndThirdParty_CheckLaunchParameters(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public void ThirdParty_CheckLaunchParametersAsync(string strServiceAccountID, string strOTP) {
        this.ThirdParty_CheckLaunchParametersAsync(strServiceAccountID, strOTP, null);
    }
    
    /// <remarks/>
    public void ThirdParty_CheckLaunchParametersAsync(string strServiceAccountID, string strOTP, object userState) {
        if ((this.ThirdParty_CheckLaunchParametersOperationCompleted == null)) {
            this.ThirdParty_CheckLaunchParametersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThirdParty_CheckLaunchParametersOperationCompleted);
        }
        this.InvokeAsync("ThirdParty_CheckLaunchParameters", new object[] {
                    strServiceAccountID,
                    strOTP}, this.ThirdParty_CheckLaunchParametersOperationCompleted, userState);
    }
    
    private void OnThirdParty_CheckLaunchParametersOperationCompleted(object arg) {
        if ((this.ThirdParty_CheckLaunchParametersCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ThirdParty_CheckLaunchParametersCompleted(this, new ThirdParty_CheckLaunchParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tw.beanfun.gamania.com/ThirdPartyAdapter/ThirdParty_GetStartURL", RequestNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", ResponseNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ThirdParty_GetStartURL(string strServiceCode, string strServiceRegion) {
        object[] results = this.Invoke("ThirdParty_GetStartURL", new object[] {
                    strServiceCode,
                    strServiceRegion});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginThirdParty_GetStartURL(string strServiceCode, string strServiceRegion, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ThirdParty_GetStartURL", new object[] {
                    strServiceCode,
                    strServiceRegion}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndThirdParty_GetStartURL(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ThirdParty_GetStartURLAsync(string strServiceCode, string strServiceRegion) {
        this.ThirdParty_GetStartURLAsync(strServiceCode, strServiceRegion, null);
    }
    
    /// <remarks/>
    public void ThirdParty_GetStartURLAsync(string strServiceCode, string strServiceRegion, object userState) {
        if ((this.ThirdParty_GetStartURLOperationCompleted == null)) {
            this.ThirdParty_GetStartURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThirdParty_GetStartURLOperationCompleted);
        }
        this.InvokeAsync("ThirdParty_GetStartURL", new object[] {
                    strServiceCode,
                    strServiceRegion}, this.ThirdParty_GetStartURLOperationCompleted, userState);
    }
    
    private void OnThirdParty_GetStartURLOperationCompleted(object arg) {
        if ((this.ThirdParty_GetStartURLCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ThirdParty_GetStartURLCompleted(this, new ThirdParty_GetStartURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tw.beanfun.gamania.com/ThirdPartyAdapter/ThirdParty_GetDepositURL", RequestNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", ResponseNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ThirdParty_GetDepositURL(string strServiceCode, string strServiceRegion) {
        object[] results = this.Invoke("ThirdParty_GetDepositURL", new object[] {
                    strServiceCode,
                    strServiceRegion});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginThirdParty_GetDepositURL(string strServiceCode, string strServiceRegion, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ThirdParty_GetDepositURL", new object[] {
                    strServiceCode,
                    strServiceRegion}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndThirdParty_GetDepositURL(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ThirdParty_GetDepositURLAsync(string strServiceCode, string strServiceRegion) {
        this.ThirdParty_GetDepositURLAsync(strServiceCode, strServiceRegion, null);
    }
    
    /// <remarks/>
    public void ThirdParty_GetDepositURLAsync(string strServiceCode, string strServiceRegion, object userState) {
        if ((this.ThirdParty_GetDepositURLOperationCompleted == null)) {
            this.ThirdParty_GetDepositURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThirdParty_GetDepositURLOperationCompleted);
        }
        this.InvokeAsync("ThirdParty_GetDepositURL", new object[] {
                    strServiceCode,
                    strServiceRegion}, this.ThirdParty_GetDepositURLOperationCompleted, userState);
    }
    
    private void OnThirdParty_GetDepositURLOperationCompleted(object arg) {
        if ((this.ThirdParty_GetDepositURLCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ThirdParty_GetDepositURLCompleted(this, new ThirdParty_GetDepositURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tw.beanfun.gamania.com/ThirdPartyAdapter/ThirdParty_GetServiceName", RequestNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", ResponseNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ThirdParty_GetServiceName(string strServiceCode, string strServiceRegion) {
        object[] results = this.Invoke("ThirdParty_GetServiceName", new object[] {
                    strServiceCode,
                    strServiceRegion});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginThirdParty_GetServiceName(string strServiceCode, string strServiceRegion, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ThirdParty_GetServiceName", new object[] {
                    strServiceCode,
                    strServiceRegion}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndThirdParty_GetServiceName(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ThirdParty_GetServiceNameAsync(string strServiceCode, string strServiceRegion) {
        this.ThirdParty_GetServiceNameAsync(strServiceCode, strServiceRegion, null);
    }
    
    /// <remarks/>
    public void ThirdParty_GetServiceNameAsync(string strServiceCode, string strServiceRegion, object userState) {
        if ((this.ThirdParty_GetServiceNameOperationCompleted == null)) {
            this.ThirdParty_GetServiceNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThirdParty_GetServiceNameOperationCompleted);
        }
        this.InvokeAsync("ThirdParty_GetServiceName", new object[] {
                    strServiceCode,
                    strServiceRegion}, this.ThirdParty_GetServiceNameOperationCompleted, userState);
    }
    
    private void OnThirdParty_GetServiceNameOperationCompleted(object arg) {
        if ((this.ThirdParty_GetServiceNameCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ThirdParty_GetServiceNameCompleted(this, new ThirdParty_GetServiceNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tw.beanfun.gamania.com/ThirdPartyAdapter/ThirdParty_CheckService", RequestNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", ResponseNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Result ThirdParty_CheckService(string strServiceCode, string strServiceRegion) {
        object[] results = this.Invoke("ThirdParty_CheckService", new object[] {
                    strServiceCode,
                    strServiceRegion});
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginThirdParty_CheckService(string strServiceCode, string strServiceRegion, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ThirdParty_CheckService", new object[] {
                    strServiceCode,
                    strServiceRegion}, callback, asyncState);
    }
    
    /// <remarks/>
    public Result EndThirdParty_CheckService(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public void ThirdParty_CheckServiceAsync(string strServiceCode, string strServiceRegion) {
        this.ThirdParty_CheckServiceAsync(strServiceCode, strServiceRegion, null);
    }
    
    /// <remarks/>
    public void ThirdParty_CheckServiceAsync(string strServiceCode, string strServiceRegion, object userState) {
        if ((this.ThirdParty_CheckServiceOperationCompleted == null)) {
            this.ThirdParty_CheckServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThirdParty_CheckServiceOperationCompleted);
        }
        this.InvokeAsync("ThirdParty_CheckService", new object[] {
                    strServiceCode,
                    strServiceRegion}, this.ThirdParty_CheckServiceOperationCompleted, userState);
    }
    
    private void OnThirdParty_CheckServiceOperationCompleted(object arg) {
        if ((this.ThirdParty_CheckServiceCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ThirdParty_CheckServiceCompleted(this, new ThirdParty_CheckServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tw.beanfun.gamania.com/ThirdPartyAdapter/ThirdParty_GetMainServiceCode", RequestNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", ResponseNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ThirdParty_GetMainServiceCode(string strServiceRegion) {
        object[] results = this.Invoke("ThirdParty_GetMainServiceCode", new object[] {
                    strServiceRegion});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginThirdParty_GetMainServiceCode(string strServiceRegion, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ThirdParty_GetMainServiceCode", new object[] {
                    strServiceRegion}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndThirdParty_GetMainServiceCode(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ThirdParty_GetMainServiceCodeAsync(string strServiceRegion) {
        this.ThirdParty_GetMainServiceCodeAsync(strServiceRegion, null);
    }
    
    /// <remarks/>
    public void ThirdParty_GetMainServiceCodeAsync(string strServiceRegion, object userState) {
        if ((this.ThirdParty_GetMainServiceCodeOperationCompleted == null)) {
            this.ThirdParty_GetMainServiceCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThirdParty_GetMainServiceCodeOperationCompleted);
        }
        this.InvokeAsync("ThirdParty_GetMainServiceCode", new object[] {
                    strServiceRegion}, this.ThirdParty_GetMainServiceCodeOperationCompleted, userState);
    }
    
    private void OnThirdParty_GetMainServiceCodeOperationCompleted(object arg) {
        if ((this.ThirdParty_GetMainServiceCodeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ThirdParty_GetMainServiceCodeCompleted(this, new ThirdParty_GetMainServiceCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tw.beanfun.gamania.com/ThirdPartyAdapter/ThirdParty_CheckLoginOTP1", RequestNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", ResponseNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Result ThirdParty_CheckLoginOTP1(string strOTP1) {
        object[] results = this.Invoke("ThirdParty_CheckLoginOTP1", new object[] {
                    strOTP1});
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginThirdParty_CheckLoginOTP1(string strOTP1, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ThirdParty_CheckLoginOTP1", new object[] {
                    strOTP1}, callback, asyncState);
    }
    
    /// <remarks/>
    public Result EndThirdParty_CheckLoginOTP1(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public void ThirdParty_CheckLoginOTP1Async(string strOTP1) {
        this.ThirdParty_CheckLoginOTP1Async(strOTP1, null);
    }
    
    /// <remarks/>
    public void ThirdParty_CheckLoginOTP1Async(string strOTP1, object userState) {
        if ((this.ThirdParty_CheckLoginOTP1OperationCompleted == null)) {
            this.ThirdParty_CheckLoginOTP1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnThirdParty_CheckLoginOTP1OperationCompleted);
        }
        this.InvokeAsync("ThirdParty_CheckLoginOTP1", new object[] {
                    strOTP1}, this.ThirdParty_CheckLoginOTP1OperationCompleted, userState);
    }
    
    private void OnThirdParty_CheckLoginOTP1OperationCompleted(object arg) {
        if ((this.ThirdParty_CheckLoginOTP1Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ThirdParty_CheckLoginOTP1Completed(this, new ThirdParty_CheckLoginOTP1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tw.beanfun.gamania.com/ThirdPartyAdapter/ThirdParty_LoginOTP2Insert", RequestNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", ResponseNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Result ThirdParty_LoginOTP2Insert(string strOTP1, string strOTP2, int iServerIndex, string strMainAccountID, int iMainAccountSN) {
        object[] results = this.Invoke("ThirdParty_LoginOTP2Insert", new object[] {
                    strOTP1,
                    strOTP2,
                    iServerIndex,
                    strMainAccountID,
                    iMainAccountSN});
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginThirdParty_LoginOTP2Insert(string strOTP1, string strOTP2, int iServerIndex, string strMainAccountID, int iMainAccountSN, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ThirdParty_LoginOTP2Insert", new object[] {
                    strOTP1,
                    strOTP2,
                    iServerIndex,
                    strMainAccountID,
                    iMainAccountSN}, callback, asyncState);
    }
    
    /// <remarks/>
    public Result EndThirdParty_LoginOTP2Insert(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public void ThirdParty_LoginOTP2InsertAsync(string strOTP1, string strOTP2, int iServerIndex, string strMainAccountID, int iMainAccountSN) {
        this.ThirdParty_LoginOTP2InsertAsync(strOTP1, strOTP2, iServerIndex, strMainAccountID, iMainAccountSN, null);
    }
    
    /// <remarks/>
    public void ThirdParty_LoginOTP2InsertAsync(string strOTP1, string strOTP2, int iServerIndex, string strMainAccountID, int iMainAccountSN, object userState) {
        if ((this.ThirdParty_LoginOTP2InsertOperationCompleted == null)) {
            this.ThirdParty_LoginOTP2InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThirdParty_LoginOTP2InsertOperationCompleted);
        }
        this.InvokeAsync("ThirdParty_LoginOTP2Insert", new object[] {
                    strOTP1,
                    strOTP2,
                    iServerIndex,
                    strMainAccountID,
                    iMainAccountSN}, this.ThirdParty_LoginOTP2InsertOperationCompleted, userState);
    }
    
    private void OnThirdParty_LoginOTP2InsertOperationCompleted(object arg) {
        if ((this.ThirdParty_LoginOTP2InsertCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ThirdParty_LoginOTP2InsertCompleted(this, new ThirdParty_LoginOTP2InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tw.beanfun.gamania.com/ThirdPartyAdapter/ThirdParty_LoginOTP1GetReturnUrl", RequestNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", ResponseNamespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Result ThirdParty_LoginOTP1GetReturnUrl(string OTP1) {
        object[] results = this.Invoke("ThirdParty_LoginOTP1GetReturnUrl", new object[] {
                    OTP1});
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginThirdParty_LoginOTP1GetReturnUrl(string OTP1, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ThirdParty_LoginOTP1GetReturnUrl", new object[] {
                    OTP1}, callback, asyncState);
    }
    
    /// <remarks/>
    public Result EndThirdParty_LoginOTP1GetReturnUrl(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public void ThirdParty_LoginOTP1GetReturnUrlAsync(string OTP1) {
        this.ThirdParty_LoginOTP1GetReturnUrlAsync(OTP1, null);
    }
    
    /// <remarks/>
    public void ThirdParty_LoginOTP1GetReturnUrlAsync(string OTP1, object userState) {
        if ((this.ThirdParty_LoginOTP1GetReturnUrlOperationCompleted == null)) {
            this.ThirdParty_LoginOTP1GetReturnUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThirdParty_LoginOTP1GetReturnUrlOperationCompleted);
        }
        this.InvokeAsync("ThirdParty_LoginOTP1GetReturnUrl", new object[] {
                    OTP1}, this.ThirdParty_LoginOTP1GetReturnUrlOperationCompleted, userState);
    }
    
    private void OnThirdParty_LoginOTP1GetReturnUrlOperationCompleted(object arg) {
        if ((this.ThirdParty_LoginOTP1GetReturnUrlCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ThirdParty_LoginOTP1GetReturnUrlCompleted(this, new ThirdParty_LoginOTP1GetReturnUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tw.beanfun.gamania.com/ThirdPartyAdapter/")]
public partial class Result {
    
    private int codeField;
    
    private string messageField;
    
    /// <remarks/>
    public int Code {
        get {
            return this.codeField;
        }
        set {
            this.codeField = value;
        }
    }
    
    /// <remarks/>
    public string Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void ServiceAccountID_CreateCompletedEventHandler(object sender, ServiceAccountID_CreateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ServiceAccountID_CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ServiceAccountID_CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Result Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Result)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void ServiceAccountID_UpdateCompletedEventHandler(object sender, ServiceAccountID_UpdateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ServiceAccountID_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ServiceAccountID_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Result Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Result)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void ServiceAccountID_LockCompletedEventHandler(object sender, ServiceAccountID_LockCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ServiceAccountID_LockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ServiceAccountID_LockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Result Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Result)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void ThirdParty_GetAliasAccountIDCompletedEventHandler(object sender, ThirdParty_GetAliasAccountIDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ThirdParty_GetAliasAccountIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ThirdParty_GetAliasAccountIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Result Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Result)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void ThirdParty_GetServiceAccountIDCompletedEventHandler(object sender, ThirdParty_GetServiceAccountIDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ThirdParty_GetServiceAccountIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ThirdParty_GetServiceAccountIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Result Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Result)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void ThirdParty_CheckLaunchParametersCompletedEventHandler(object sender, ThirdParty_CheckLaunchParametersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ThirdParty_CheckLaunchParametersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ThirdParty_CheckLaunchParametersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Result Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Result)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void ThirdParty_GetStartURLCompletedEventHandler(object sender, ThirdParty_GetStartURLCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ThirdParty_GetStartURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ThirdParty_GetStartURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void ThirdParty_GetDepositURLCompletedEventHandler(object sender, ThirdParty_GetDepositURLCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ThirdParty_GetDepositURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ThirdParty_GetDepositURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void ThirdParty_GetServiceNameCompletedEventHandler(object sender, ThirdParty_GetServiceNameCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ThirdParty_GetServiceNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ThirdParty_GetServiceNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void ThirdParty_CheckServiceCompletedEventHandler(object sender, ThirdParty_CheckServiceCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ThirdParty_CheckServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ThirdParty_CheckServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Result Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Result)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void ThirdParty_GetMainServiceCodeCompletedEventHandler(object sender, ThirdParty_GetMainServiceCodeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ThirdParty_GetMainServiceCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ThirdParty_GetMainServiceCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void ThirdParty_CheckLoginOTP1CompletedEventHandler(object sender, ThirdParty_CheckLoginOTP1CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ThirdParty_CheckLoginOTP1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ThirdParty_CheckLoginOTP1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Result Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Result)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void ThirdParty_LoginOTP2InsertCompletedEventHandler(object sender, ThirdParty_LoginOTP2InsertCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ThirdParty_LoginOTP2InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ThirdParty_LoginOTP2InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Result Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Result)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void ThirdParty_LoginOTP1GetReturnUrlCompletedEventHandler(object sender, ThirdParty_LoginOTP1GetReturnUrlCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ThirdParty_LoginOTP1GetReturnUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ThirdParty_LoginOTP1GetReturnUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Result Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Result)(this.results[0]));
        }
    }
}
