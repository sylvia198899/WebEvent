//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;


    // 
    // This source code was auto-generated by wsdl, Version=2.0.50727.42.
    // 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "MainAccountSoap", Namespace = "http://GASHv30FWS/MainAccount/")]
    public partial class MainAccount : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback MainAccount_AuthenticationOperationCompleted;

        private System.Threading.SendOrPostCallback MainAccount_Auth_GetServiceAccountOperationCompleted;

        private System.Threading.SendOrPostCallback MainAccount_Auth_GetServiceAccountNLockOperationCompleted;

        private System.Threading.SendOrPostCallback MainAccount_Auth_GetPointOperationCompleted;

        private System.Threading.SendOrPostCallback MainAccount_CheckServiceAccount_GetPointOperationCompleted;

        private System.Threading.SendOrPostCallback MainAccount_GetBasicInfoOperationCompleted;

        private System.Threading.SendOrPostCallback MainAccount_UpdateBasicInfoOperationCompleted;

        private System.Threading.SendOrPostCallback MainAccount_GetRemainingPointsOperationCompleted;

        /// <remarks/>
        public MainAccount()
        {
            this.Url = "https://tw.gashws.gamania.com/gashv30fws/mainaccount.asmx";
        }

        /// <remarks/>
        public event MainAccount_AuthenticationCompletedEventHandler MainAccount_AuthenticationCompleted;

        /// <remarks/>
        public event MainAccount_Auth_GetServiceAccountCompletedEventHandler MainAccount_Auth_GetServiceAccountCompleted;

        /// <remarks/>
        public event MainAccount_Auth_GetServiceAccountNLockCompletedEventHandler MainAccount_Auth_GetServiceAccountNLockCompleted;

        /// <remarks/>
        public event MainAccount_Auth_GetPointCompletedEventHandler MainAccount_Auth_GetPointCompleted;

        /// <remarks/>
        public event MainAccount_CheckServiceAccount_GetPointCompletedEventHandler MainAccount_CheckServiceAccount_GetPointCompleted;

        /// <remarks/>
        public event MainAccount_GetBasicInfoCompletedEventHandler MainAccount_GetBasicInfoCompleted;

        /// <remarks/>
        public event MainAccount_UpdateBasicInfoCompletedEventHandler MainAccount_UpdateBasicInfoCompleted;

        /// <remarks/>
        public event MainAccount_GetRemainingPointsCompletedEventHandler MainAccount_GetRemainingPointsCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GASHv30FWS/MainAccount/MainAccount_Authentication", RequestNamespace = "http://GASHv30FWS/MainAccount/", ResponseNamespace = "http://GASHv30FWS/MainAccount/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MainAccount_Authentication(string _strMainAccountID, string _strMainAccountPassword)
        {
            object[] results = this.Invoke("MainAccount_Authentication", new object[] {
                    _strMainAccountID,
                    _strMainAccountPassword});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMainAccount_Authentication(string _strMainAccountID, string _strMainAccountPassword, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MainAccount_Authentication", new object[] {
                    _strMainAccountID,
                    _strMainAccountPassword}, callback, asyncState);
        }

        /// <remarks/>
        public string EndMainAccount_Authentication(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void MainAccount_AuthenticationAsync(string _strMainAccountID, string _strMainAccountPassword)
        {
            this.MainAccount_AuthenticationAsync(_strMainAccountID, _strMainAccountPassword, null);
        }

        /// <remarks/>
        public void MainAccount_AuthenticationAsync(string _strMainAccountID, string _strMainAccountPassword, object userState)
        {
            if ((this.MainAccount_AuthenticationOperationCompleted == null))
            {
                this.MainAccount_AuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMainAccount_AuthenticationOperationCompleted);
            }
            this.InvokeAsync("MainAccount_Authentication", new object[] {
                    _strMainAccountID,
                    _strMainAccountPassword}, this.MainAccount_AuthenticationOperationCompleted, userState);
        }

        private void OnMainAccount_AuthenticationOperationCompleted(object arg)
        {
            if ((this.MainAccount_AuthenticationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MainAccount_AuthenticationCompleted(this, new MainAccount_AuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GASHv30FWS/MainAccount/MainAccount_Auth_GetServiceAccount", RequestNamespace = "http://GASHv30FWS/MainAccount/", ResponseNamespace = "http://GASHv30FWS/MainAccount/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MainAccount_Auth_GetServiceAccount(string _strMainAccountID, string _strMainAccountPassword, string _strServiceCode, string _strServiceRegion)
        {
            object[] results = this.Invoke("MainAccount_Auth_GetServiceAccount", new object[] {
                    _strMainAccountID,
                    _strMainAccountPassword,
                    _strServiceCode,
                    _strServiceRegion});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMainAccount_Auth_GetServiceAccount(string _strMainAccountID, string _strMainAccountPassword, string _strServiceCode, string _strServiceRegion, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MainAccount_Auth_GetServiceAccount", new object[] {
                    _strMainAccountID,
                    _strMainAccountPassword,
                    _strServiceCode,
                    _strServiceRegion}, callback, asyncState);
        }

        /// <remarks/>
        public string EndMainAccount_Auth_GetServiceAccount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void MainAccount_Auth_GetServiceAccountAsync(string _strMainAccountID, string _strMainAccountPassword, string _strServiceCode, string _strServiceRegion)
        {
            this.MainAccount_Auth_GetServiceAccountAsync(_strMainAccountID, _strMainAccountPassword, _strServiceCode, _strServiceRegion, null);
        }

        /// <remarks/>
        public void MainAccount_Auth_GetServiceAccountAsync(string _strMainAccountID, string _strMainAccountPassword, string _strServiceCode, string _strServiceRegion, object userState)
        {
            if ((this.MainAccount_Auth_GetServiceAccountOperationCompleted == null))
            {
                this.MainAccount_Auth_GetServiceAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMainAccount_Auth_GetServiceAccountOperationCompleted);
            }
            this.InvokeAsync("MainAccount_Auth_GetServiceAccount", new object[] {
                    _strMainAccountID,
                    _strMainAccountPassword,
                    _strServiceCode,
                    _strServiceRegion}, this.MainAccount_Auth_GetServiceAccountOperationCompleted, userState);
        }

        private void OnMainAccount_Auth_GetServiceAccountOperationCompleted(object arg)
        {
            if ((this.MainAccount_Auth_GetServiceAccountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MainAccount_Auth_GetServiceAccountCompleted(this, new MainAccount_Auth_GetServiceAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GASHv30FWS/MainAccount/MainAccount_Auth_GetServiceAccountNLock", RequestNamespace = "http://GASHv30FWS/MainAccount/", ResponseNamespace = "http://GASHv30FWS/MainAccount/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MainAccount_Auth_GetServiceAccountNLock(string _strMainAccountID, string _strMainAccountPassword, string _strServiceCode, string _strServiceRegion)
        {
            object[] results = this.Invoke("MainAccount_Auth_GetServiceAccountNLock", new object[] {
                    _strMainAccountID,
                    _strMainAccountPassword,
                    _strServiceCode,
                    _strServiceRegion});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMainAccount_Auth_GetServiceAccountNLock(string _strMainAccountID, string _strMainAccountPassword, string _strServiceCode, string _strServiceRegion, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MainAccount_Auth_GetServiceAccountNLock", new object[] {
                    _strMainAccountID,
                    _strMainAccountPassword,
                    _strServiceCode,
                    _strServiceRegion}, callback, asyncState);
        }

        /// <remarks/>
        public string EndMainAccount_Auth_GetServiceAccountNLock(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void MainAccount_Auth_GetServiceAccountNLockAsync(string _strMainAccountID, string _strMainAccountPassword, string _strServiceCode, string _strServiceRegion)
        {
            this.MainAccount_Auth_GetServiceAccountNLockAsync(_strMainAccountID, _strMainAccountPassword, _strServiceCode, _strServiceRegion, null);
        }

        /// <remarks/>
        public void MainAccount_Auth_GetServiceAccountNLockAsync(string _strMainAccountID, string _strMainAccountPassword, string _strServiceCode, string _strServiceRegion, object userState)
        {
            if ((this.MainAccount_Auth_GetServiceAccountNLockOperationCompleted == null))
            {
                this.MainAccount_Auth_GetServiceAccountNLockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMainAccount_Auth_GetServiceAccountNLockOperationCompleted);
            }
            this.InvokeAsync("MainAccount_Auth_GetServiceAccountNLock", new object[] {
                    _strMainAccountID,
                    _strMainAccountPassword,
                    _strServiceCode,
                    _strServiceRegion}, this.MainAccount_Auth_GetServiceAccountNLockOperationCompleted, userState);
        }

        private void OnMainAccount_Auth_GetServiceAccountNLockOperationCompleted(object arg)
        {
            if ((this.MainAccount_Auth_GetServiceAccountNLockCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MainAccount_Auth_GetServiceAccountNLockCompleted(this, new MainAccount_Auth_GetServiceAccountNLockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GASHv30FWS/MainAccount/MainAccount_Auth_GetPoint", RequestNamespace = "http://GASHv30FWS/MainAccount/", ResponseNamespace = "http://GASHv30FWS/MainAccount/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MainAccount_Auth_GetPoint(string _strMainAccountID, string _strMainAccountPassword)
        {
            object[] results = this.Invoke("MainAccount_Auth_GetPoint", new object[] {
                    _strMainAccountID,
                    _strMainAccountPassword});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMainAccount_Auth_GetPoint(string _strMainAccountID, string _strMainAccountPassword, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MainAccount_Auth_GetPoint", new object[] {
                    _strMainAccountID,
                    _strMainAccountPassword}, callback, asyncState);
        }

        /// <remarks/>
        public string EndMainAccount_Auth_GetPoint(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void MainAccount_Auth_GetPointAsync(string _strMainAccountID, string _strMainAccountPassword)
        {
            this.MainAccount_Auth_GetPointAsync(_strMainAccountID, _strMainAccountPassword, null);
        }

        /// <remarks/>
        public void MainAccount_Auth_GetPointAsync(string _strMainAccountID, string _strMainAccountPassword, object userState)
        {
            if ((this.MainAccount_Auth_GetPointOperationCompleted == null))
            {
                this.MainAccount_Auth_GetPointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMainAccount_Auth_GetPointOperationCompleted);
            }
            this.InvokeAsync("MainAccount_Auth_GetPoint", new object[] {
                    _strMainAccountID,
                    _strMainAccountPassword}, this.MainAccount_Auth_GetPointOperationCompleted, userState);
        }

        private void OnMainAccount_Auth_GetPointOperationCompleted(object arg)
        {
            if ((this.MainAccount_Auth_GetPointCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MainAccount_Auth_GetPointCompleted(this, new MainAccount_Auth_GetPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GASHv30FWS/MainAccount/MainAccount_CheckServiceAccount_GetPoint", RequestNamespace = "http://GASHv30FWS/MainAccount/", ResponseNamespace = "http://GASHv30FWS/MainAccount/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MainAccount_CheckServiceAccount_GetPoint(string _strMainAccountID, string _strMainAccountPassword, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID)
        {
            object[] results = this.Invoke("MainAccount_CheckServiceAccount_GetPoint", new object[] {
                    _strMainAccountID,
                    _strMainAccountPassword,
                    _strServiceCode,
                    _strServiceRegion,
                    _strServiceAccountID});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMainAccount_CheckServiceAccount_GetPoint(string _strMainAccountID, string _strMainAccountPassword, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MainAccount_CheckServiceAccount_GetPoint", new object[] {
                    _strMainAccountID,
                    _strMainAccountPassword,
                    _strServiceCode,
                    _strServiceRegion,
                    _strServiceAccountID}, callback, asyncState);
        }

        /// <remarks/>
        public string EndMainAccount_CheckServiceAccount_GetPoint(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void MainAccount_CheckServiceAccount_GetPointAsync(string _strMainAccountID, string _strMainAccountPassword, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID)
        {
            this.MainAccount_CheckServiceAccount_GetPointAsync(_strMainAccountID, _strMainAccountPassword, _strServiceCode, _strServiceRegion, _strServiceAccountID, null);
        }

        /// <remarks/>
        public void MainAccount_CheckServiceAccount_GetPointAsync(string _strMainAccountID, string _strMainAccountPassword, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, object userState)
        {
            if ((this.MainAccount_CheckServiceAccount_GetPointOperationCompleted == null))
            {
                this.MainAccount_CheckServiceAccount_GetPointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMainAccount_CheckServiceAccount_GetPointOperationCompleted);
            }
            this.InvokeAsync("MainAccount_CheckServiceAccount_GetPoint", new object[] {
                    _strMainAccountID,
                    _strMainAccountPassword,
                    _strServiceCode,
                    _strServiceRegion,
                    _strServiceAccountID}, this.MainAccount_CheckServiceAccount_GetPointOperationCompleted, userState);
        }

        private void OnMainAccount_CheckServiceAccount_GetPointOperationCompleted(object arg)
        {
            if ((this.MainAccount_CheckServiceAccount_GetPointCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MainAccount_CheckServiceAccount_GetPointCompleted(this, new MainAccount_CheckServiceAccount_GetPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GASHv30FWS/MainAccount/MainAccount_GetBasicInfo", RequestNamespace = "http://GASHv30FWS/MainAccount/", ResponseNamespace = "http://GASHv30FWS/MainAccount/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet MainAccount_GetBasicInfo(string _strMainAccountID)
        {
            object[] results = this.Invoke("MainAccount_GetBasicInfo", new object[] {
                    _strMainAccountID});
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMainAccount_GetBasicInfo(string _strMainAccountID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MainAccount_GetBasicInfo", new object[] {
                    _strMainAccountID}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataSet EndMainAccount_GetBasicInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public void MainAccount_GetBasicInfoAsync(string _strMainAccountID)
        {
            this.MainAccount_GetBasicInfoAsync(_strMainAccountID, null);
        }

        /// <remarks/>
        public void MainAccount_GetBasicInfoAsync(string _strMainAccountID, object userState)
        {
            if ((this.MainAccount_GetBasicInfoOperationCompleted == null))
            {
                this.MainAccount_GetBasicInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMainAccount_GetBasicInfoOperationCompleted);
            }
            this.InvokeAsync("MainAccount_GetBasicInfo", new object[] {
                    _strMainAccountID}, this.MainAccount_GetBasicInfoOperationCompleted, userState);
        }

        private void OnMainAccount_GetBasicInfoOperationCompleted(object arg)
        {
            if ((this.MainAccount_GetBasicInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MainAccount_GetBasicInfoCompleted(this, new MainAccount_GetBasicInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GASHv30FWS/MainAccount/MainAccount_UpdateBasicInfo", RequestNamespace = "http://GASHv30FWS/MainAccount/", ResponseNamespace = "http://GASHv30FWS/MainAccount/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MainAccount_UpdateBasicInfo(string _strMainAccountID, string _strRealName, string _strBirthday, string _strEMail, string _strPhoneNo, string _strGender, string _strAddress, string _strIPAddress, string _strCreator)
        {
            object[] results = this.Invoke("MainAccount_UpdateBasicInfo", new object[] {
                    _strMainAccountID,
                    _strRealName,
                    _strBirthday,
                    _strEMail,
                    _strPhoneNo,
                    _strGender,
                    _strAddress,
                    _strIPAddress,
                    _strCreator});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMainAccount_UpdateBasicInfo(string _strMainAccountID, string _strRealName, string _strBirthday, string _strEMail, string _strPhoneNo, string _strGender, string _strAddress, string _strIPAddress, string _strCreator, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MainAccount_UpdateBasicInfo", new object[] {
                    _strMainAccountID,
                    _strRealName,
                    _strBirthday,
                    _strEMail,
                    _strPhoneNo,
                    _strGender,
                    _strAddress,
                    _strIPAddress,
                    _strCreator}, callback, asyncState);
        }

        /// <remarks/>
        public string EndMainAccount_UpdateBasicInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void MainAccount_UpdateBasicInfoAsync(string _strMainAccountID, string _strRealName, string _strBirthday, string _strEMail, string _strPhoneNo, string _strGender, string _strAddress, string _strIPAddress, string _strCreator)
        {
            this.MainAccount_UpdateBasicInfoAsync(_strMainAccountID, _strRealName, _strBirthday, _strEMail, _strPhoneNo, _strGender, _strAddress, _strIPAddress, _strCreator, null);
        }

        /// <remarks/>
        public void MainAccount_UpdateBasicInfoAsync(string _strMainAccountID, string _strRealName, string _strBirthday, string _strEMail, string _strPhoneNo, string _strGender, string _strAddress, string _strIPAddress, string _strCreator, object userState)
        {
            if ((this.MainAccount_UpdateBasicInfoOperationCompleted == null))
            {
                this.MainAccount_UpdateBasicInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMainAccount_UpdateBasicInfoOperationCompleted);
            }
            this.InvokeAsync("MainAccount_UpdateBasicInfo", new object[] {
                    _strMainAccountID,
                    _strRealName,
                    _strBirthday,
                    _strEMail,
                    _strPhoneNo,
                    _strGender,
                    _strAddress,
                    _strIPAddress,
                    _strCreator}, this.MainAccount_UpdateBasicInfoOperationCompleted, userState);
        }

        private void OnMainAccount_UpdateBasicInfoOperationCompleted(object arg)
        {
            if ((this.MainAccount_UpdateBasicInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MainAccount_UpdateBasicInfoCompleted(this, new MainAccount_UpdateBasicInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GASHv30FWS/MainAccount/MainAccount_GetRemainingPoints", RequestNamespace = "http://GASHv30FWS/MainAccount/", ResponseNamespace = "http://GASHv30FWS/MainAccount/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MainAccount_GetRemainingPoints(string _strMainAccountID)
        {
            object[] results = this.Invoke("MainAccount_GetRemainingPoints", new object[] {
                    _strMainAccountID});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMainAccount_GetRemainingPoints(string _strMainAccountID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MainAccount_GetRemainingPoints", new object[] {
                    _strMainAccountID}, callback, asyncState);
        }

        /// <remarks/>
        public string EndMainAccount_GetRemainingPoints(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void MainAccount_GetRemainingPointsAsync(string _strMainAccountID)
        {
            this.MainAccount_GetRemainingPointsAsync(_strMainAccountID, null);
        }

        /// <remarks/>
        public void MainAccount_GetRemainingPointsAsync(string _strMainAccountID, object userState)
        {
            if ((this.MainAccount_GetRemainingPointsOperationCompleted == null))
            {
                this.MainAccount_GetRemainingPointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMainAccount_GetRemainingPointsOperationCompleted);
            }
            this.InvokeAsync("MainAccount_GetRemainingPoints", new object[] {
                    _strMainAccountID}, this.MainAccount_GetRemainingPointsOperationCompleted, userState);
        }

        private void OnMainAccount_GetRemainingPointsOperationCompleted(object arg)
        {
            if ((this.MainAccount_GetRemainingPointsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MainAccount_GetRemainingPointsCompleted(this, new MainAccount_GetRemainingPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void MainAccount_AuthenticationCompletedEventHandler(object sender, MainAccount_AuthenticationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MainAccount_AuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MainAccount_AuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void MainAccount_Auth_GetServiceAccountCompletedEventHandler(object sender, MainAccount_Auth_GetServiceAccountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MainAccount_Auth_GetServiceAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MainAccount_Auth_GetServiceAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void MainAccount_Auth_GetServiceAccountNLockCompletedEventHandler(object sender, MainAccount_Auth_GetServiceAccountNLockCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MainAccount_Auth_GetServiceAccountNLockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MainAccount_Auth_GetServiceAccountNLockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void MainAccount_Auth_GetPointCompletedEventHandler(object sender, MainAccount_Auth_GetPointCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MainAccount_Auth_GetPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MainAccount_Auth_GetPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void MainAccount_CheckServiceAccount_GetPointCompletedEventHandler(object sender, MainAccount_CheckServiceAccount_GetPointCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MainAccount_CheckServiceAccount_GetPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MainAccount_CheckServiceAccount_GetPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void MainAccount_GetBasicInfoCompletedEventHandler(object sender, MainAccount_GetBasicInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MainAccount_GetBasicInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MainAccount_GetBasicInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataSet Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void MainAccount_UpdateBasicInfoCompletedEventHandler(object sender, MainAccount_UpdateBasicInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MainAccount_UpdateBasicInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MainAccount_UpdateBasicInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void MainAccount_GetRemainingPointsCompletedEventHandler(object sender, MainAccount_GetRemainingPointsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MainAccount_GetRemainingPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MainAccount_GetRemainingPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

