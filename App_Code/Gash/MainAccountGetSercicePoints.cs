//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.1433
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此原始程式碼由 wsdl 版本=2.0.50727.42 自動產生。
// 
namespace GashGetServicePoint {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://GASHv30FWS_Extend/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Service_GetInfoOperationCompleted;
        
        /// <remarks/>
        public Service() {
            this.Url = "http://tw.gashws.gamania.com/GASHv30FWS_Extend/GASHv30FWS_ServiceExtend/Service.asmx";
        }
        
        /// <remarks/>
        public event Service_GetInfoCompletedEventHandler Service_GetInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GASHv30FWS_Extend/Service_GetInfo", RequestNamespace="http://GASHv30FWS_Extend/", ResponseNamespace="http://GASHv30FWS_Extend/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Service_GetInfo(string _strMainAccount, string _strServiceCode, string _strServiceRegion) {
            object[] results = this.Invoke("Service_GetInfo", new object[] {
                        _strMainAccount,
                        _strServiceCode,
                        _strServiceRegion});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginService_GetInfo(string _strMainAccount, string _strServiceCode, string _strServiceRegion, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Service_GetInfo", new object[] {
                        _strMainAccount,
                        _strServiceCode,
                        _strServiceRegion}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndService_GetInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Service_GetInfoAsync(string _strMainAccount, string _strServiceCode, string _strServiceRegion) {
            this.Service_GetInfoAsync(_strMainAccount, _strServiceCode, _strServiceRegion, null);
        }
        
        /// <remarks/>
        public void Service_GetInfoAsync(string _strMainAccount, string _strServiceCode, string _strServiceRegion, object userState) {
            if ((this.Service_GetInfoOperationCompleted == null)) {
                this.Service_GetInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnService_GetInfoOperationCompleted);
            }
            this.InvokeAsync("Service_GetInfo", new object[] {
                        _strMainAccount,
                        _strServiceCode,
                        _strServiceRegion}, this.Service_GetInfoOperationCompleted, userState);
        }
        
        private void OnService_GetInfoOperationCompleted(object arg) {
            if ((this.Service_GetInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Service_GetInfoCompleted(this, new Service_GetInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void Service_GetInfoCompletedEventHandler(object sender, Service_GetInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Service_GetInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Service_GetInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}
