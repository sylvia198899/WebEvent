//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.3603
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// 此原始程式碼由 wsdl 版本=2.0.50727.42 自動產生。
// 

namespace Gamania
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "SMSSoap", Namespace = "http://tempuri.org/")]
    public partial class SMS : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback SMS_SendOperationCompleted;

        private System.Threading.SendOrPostCallback SMS_CheckOperationCompleted;

        /// <remarks/>
        public SMS()
        {
            //測試機
            //this.Url = "http://202.80.108.209/SMSv3WebService/SMS.asmx";

            //正式機
            this.Url = "http://tw.sms.gamania.com/SMSv3WebService/SMS.asmx";            
        }

        /// <remarks/>
        public event SMS_SendCompletedEventHandler SMS_SendCompleted;

        /// <remarks/>
        public event SMS_CheckCompletedEventHandler SMS_CheckCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SMS_Send", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OLTP SMS_Send(string _ThirdPartyID, string _CPhoneNo, string _SendMessage, string _SendURL, System.DateTime _ExpectSendTime, int _ExpirationMinutes, string _Encoding, string _Region, char _MessageType, string _Verify)
        {
            object[] results = this.Invoke("SMS_Send", new object[] {
                    _ThirdPartyID,
                    _CPhoneNo,
                    _SendMessage,
                    _SendURL,
                    _ExpectSendTime,
                    _ExpirationMinutes,
                    _Encoding,
                    _Region,
                    _MessageType,
                    _Verify});
            return ((OLTP)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSMS_Send(string _ThirdPartyID, string _CPhoneNo, string _SendMessage, string _SendURL, System.DateTime _ExpectSendTime, int _ExpirationMinutes, string _Encoding, string _Region, char _MessageType, string _Verify, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SMS_Send", new object[] {
                    _ThirdPartyID,
                    _CPhoneNo,
                    _SendMessage,
                    _SendURL,
                    _ExpectSendTime,
                    _ExpirationMinutes,
                    _Encoding,
                    _Region,
                    _MessageType,
                    _Verify}, callback, asyncState);
        }

        /// <remarks/>
        public OLTP EndSMS_Send(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((OLTP)(results[0]));
        }

        /// <remarks/>
        public void SMS_SendAsync(string _ThirdPartyID, string _CPhoneNo, string _SendMessage, string _SendURL, System.DateTime _ExpectSendTime, int _ExpirationMinutes, string _Encoding, string _Region, char _MessageType, string _Verify)
        {
            this.SMS_SendAsync(_ThirdPartyID, _CPhoneNo, _SendMessage, _SendURL, _ExpectSendTime, _ExpirationMinutes, _Encoding, _Region, _MessageType, _Verify, null);
        }

        /// <remarks/>
        public void SMS_SendAsync(string _ThirdPartyID, string _CPhoneNo, string _SendMessage, string _SendURL, System.DateTime _ExpectSendTime, int _ExpirationMinutes, string _Encoding, string _Region, char _MessageType, string _Verify, object userState)
        {
            if ((this.SMS_SendOperationCompleted == null))
            {
                this.SMS_SendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMS_SendOperationCompleted);
            }
            this.InvokeAsync("SMS_Send", new object[] {
                    _ThirdPartyID,
                    _CPhoneNo,
                    _SendMessage,
                    _SendURL,
                    _ExpectSendTime,
                    _ExpirationMinutes,
                    _Encoding,
                    _Region,
                    _MessageType,
                    _Verify}, this.SMS_SendOperationCompleted, userState);
        }

        private void OnSMS_SendOperationCompleted(object arg)
        {
            if ((this.SMS_SendCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMS_SendCompleted(this, new SMS_SendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SMS_Check", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OLTP SMS_Check(string _ThirdPartyID, string _SMSID, string _Verify)
        {
            object[] results = this.Invoke("SMS_Check", new object[] {
                    _ThirdPartyID,
                    _SMSID,
                    _Verify});
            return ((OLTP)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSMS_Check(string _ThirdPartyID, string _SMSID, string _Verify, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SMS_Check", new object[] {
                    _ThirdPartyID,
                    _SMSID,
                    _Verify}, callback, asyncState);
        }

        /// <remarks/>
        public OLTP EndSMS_Check(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((OLTP)(results[0]));
        }

        /// <remarks/>
        public void SMS_CheckAsync(string _ThirdPartyID, string _SMSID, string _Verify)
        {
            this.SMS_CheckAsync(_ThirdPartyID, _SMSID, _Verify, null);
        }

        /// <remarks/>
        public void SMS_CheckAsync(string _ThirdPartyID, string _SMSID, string _Verify, object userState)
        {
            if ((this.SMS_CheckOperationCompleted == null))
            {
                this.SMS_CheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMS_CheckOperationCompleted);
            }
            this.InvokeAsync("SMS_Check", new object[] {
                    _ThirdPartyID,
                    _SMSID,
                    _Verify}, this.SMS_CheckOperationCompleted, userState);
        }

        private void OnSMS_CheckOperationCompleted(object arg)
        {
            if ((this.SMS_CheckCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMS_CheckCompleted(this, new SMS_CheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class OLTP
    {

        private string resultField;

        private string sMSIDField;

        private string messageTXTField;

        private string sendToPATimeField;

        /// <remarks/>
        public string Result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }

        /// <remarks/>
        public string SMSID
        {
            get
            {
                return this.sMSIDField;
            }
            set
            {
                this.sMSIDField = value;
            }
        }

        /// <remarks/>
        public string MessageTXT
        {
            get
            {
                return this.messageTXTField;
            }
            set
            {
                this.messageTXTField = value;
            }
        }

        /// <remarks/>
        public string SendToPATime
        {
            get
            {
                return this.sendToPATimeField;
            }
            set
            {
                this.sendToPATimeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SMS_SendCompletedEventHandler(object sender, SMS_SendCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMS_SendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SMS_SendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public OLTP Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((OLTP)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SMS_CheckCompletedEventHandler(object sender, SMS_CheckCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMS_CheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SMS_CheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public OLTP Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((OLTP)(this.results[0]));
            }
        }
    }
}