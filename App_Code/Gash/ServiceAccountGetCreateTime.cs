//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

namespace GashService
{
// 
// 此原始程式碼由 wsdl 版本=2.0.50727.42 自動產生。
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback ServiceAccount_GetCreateTimeOperationCompleted;
    
    /// <remarks/>
    public Service() {
        this.Url = "http://tw.webservices.beanfun.com/Event/ServiceAccountGetCreateTime/Service.asmx";
    }
    
    /// <remarks/>
    public event ServiceAccount_GetCreateTimeCompletedEventHandler ServiceAccount_GetCreateTimeCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ServiceAccount_GetCreateTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Execute_Result ServiceAccount_GetCreateTime(string _strServiceCode, string _strServiceRegion, string _strServiceAccountID) {
        object[] results = this.Invoke("ServiceAccount_GetCreateTime", new object[] {
                    _strServiceCode,
                    _strServiceRegion,
                    _strServiceAccountID});
        return ((Execute_Result)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginServiceAccount_GetCreateTime(string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ServiceAccount_GetCreateTime", new object[] {
                    _strServiceCode,
                    _strServiceRegion,
                    _strServiceAccountID}, callback, asyncState);
    }
    
    /// <remarks/>
    public Execute_Result EndServiceAccount_GetCreateTime(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Execute_Result)(results[0]));
    }
    
    /// <remarks/>
    public void ServiceAccount_GetCreateTimeAsync(string _strServiceCode, string _strServiceRegion, string _strServiceAccountID) {
        this.ServiceAccount_GetCreateTimeAsync(_strServiceCode, _strServiceRegion, _strServiceAccountID, null);
    }
    
    /// <remarks/>
    public void ServiceAccount_GetCreateTimeAsync(string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, object userState) {
        if ((this.ServiceAccount_GetCreateTimeOperationCompleted == null)) {
            this.ServiceAccount_GetCreateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceAccount_GetCreateTimeOperationCompleted);
        }
        this.InvokeAsync("ServiceAccount_GetCreateTime", new object[] {
                    _strServiceCode,
                    _strServiceRegion,
                    _strServiceAccountID}, this.ServiceAccount_GetCreateTimeOperationCompleted, userState);
    }
    
    private void OnServiceAccount_GetCreateTimeOperationCompleted(object arg) {
        if ((this.ServiceAccount_GetCreateTimeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ServiceAccount_GetCreateTimeCompleted(this, new ServiceAccount_GetCreateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
public partial class Execute_Result {
    
    private int resultField;
    
    private string outStringField;
    
    /// <remarks/>
    public int Result {
        get {
            return this.resultField;
        }
        set {
            this.resultField = value;
        }
    }
    
    /// <remarks/>
    public string OutString {
        get {
            return this.outStringField;
        }
        set {
            this.outStringField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void ServiceAccount_GetCreateTimeCompletedEventHandler(object sender, ServiceAccount_GetCreateTimeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ServiceAccount_GetCreateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ServiceAccount_GetCreateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Execute_Result Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Execute_Result)(this.results[0]));
        }
    }
}
}