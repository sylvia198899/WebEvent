//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.1433
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
namespace bfServiceAccount {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceAccountSoap", Namespace="http://tempuri.org/")]
    public partial class ServiceAccount : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ServiceAccount_GetMainAccountIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceAccount_CreateSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceAccount_GetAllEventLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceAccount_GetStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceAccount_GetStatusLockOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceAccount_GetRemainingPointsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceAccount_ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceAccount_UpdateExpirationTime_TimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceAccount_GetIndexData_AllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceAccount_HourglassGetRemainingMinutesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceAccount_GetDBIndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceAccount_GetIndexDataOperationCompleted;
        
        /// <remarks/>
        public ServiceAccount() {
            this.Url = "https://tw.webservices.beanfun.com/gashv35fws/serviceaccount.asmx";
        }
        
        /// <remarks/>
        public event ServiceAccount_GetMainAccountIDCompletedEventHandler ServiceAccount_GetMainAccountIDCompleted;
        
        /// <remarks/>
        public event ServiceAccount_CreateSimpleCompletedEventHandler ServiceAccount_CreateSimpleCompleted;
        
        /// <remarks/>
        public event ServiceAccount_GetAllEventLogCompletedEventHandler ServiceAccount_GetAllEventLogCompleted;
        
        /// <remarks/>
        public event ServiceAccount_GetStatusCompletedEventHandler ServiceAccount_GetStatusCompleted;
        
        /// <remarks/>
        public event ServiceAccount_GetStatusLockCompletedEventHandler ServiceAccount_GetStatusLockCompleted;
        
        /// <remarks/>
        public event ServiceAccount_GetRemainingPointsCompletedEventHandler ServiceAccount_GetRemainingPointsCompleted;
        
        /// <remarks/>
        public event ServiceAccount_ChangePasswordCompletedEventHandler ServiceAccount_ChangePasswordCompleted;
        
        /// <remarks/>
        public event ServiceAccount_UpdateExpirationTime_TimeCompletedEventHandler ServiceAccount_UpdateExpirationTime_TimeCompleted;
        
        /// <remarks/>
        public event ServiceAccount_GetIndexData_AllCompletedEventHandler ServiceAccount_GetIndexData_AllCompleted;
        
        /// <remarks/>
        public event ServiceAccount_HourglassGetRemainingMinutesCompletedEventHandler ServiceAccount_HourglassGetRemainingMinutesCompleted;
        
        /// <remarks/>
        public event ServiceAccount_GetDBIndexCompletedEventHandler ServiceAccount_GetDBIndexCompleted;
        
        /// <remarks/>
        public event ServiceAccount_GetIndexDataCompletedEventHandler ServiceAccount_GetIndexDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ServiceAccount_GetMainAccountID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceAccount_GetMainAccountID_Result ServiceAccount_GetMainAccountID(int _intServerIndex, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID) {
            object[] results = this.Invoke("ServiceAccount_GetMainAccountID", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _strServiceAccountID});
            return ((ServiceAccount_GetMainAccountID_Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginServiceAccount_GetMainAccountID(int _intServerIndex, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ServiceAccount_GetMainAccountID", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _strServiceAccountID}, callback, asyncState);
        }
        
        /// <remarks/>
        public ServiceAccount_GetMainAccountID_Result EndServiceAccount_GetMainAccountID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ServiceAccount_GetMainAccountID_Result)(results[0]));
        }
        
        /// <remarks/>
        public void ServiceAccount_GetMainAccountIDAsync(int _intServerIndex, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID) {
            this.ServiceAccount_GetMainAccountIDAsync(_intServerIndex, _strServiceCode, _strServiceRegion, _strServiceAccountID, null);
        }
        
        /// <remarks/>
        public void ServiceAccount_GetMainAccountIDAsync(int _intServerIndex, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, object userState) {
            if ((this.ServiceAccount_GetMainAccountIDOperationCompleted == null)) {
                this.ServiceAccount_GetMainAccountIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceAccount_GetMainAccountIDOperationCompleted);
            }
            this.InvokeAsync("ServiceAccount_GetMainAccountID", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _strServiceAccountID}, this.ServiceAccount_GetMainAccountIDOperationCompleted, userState);
        }
        
        private void OnServiceAccount_GetMainAccountIDOperationCompleted(object arg) {
            if ((this.ServiceAccount_GetMainAccountIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceAccount_GetMainAccountIDCompleted(this, new ServiceAccount_GetMainAccountIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ServiceAccount_CreateSimple", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Execute_Result ServiceAccount_CreateSimple(int _intServerIndex, string _strMainAccountID, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, string _strIPAddress) {
            object[] results = this.Invoke("ServiceAccount_CreateSimple", new object[] {
                        _intServerIndex,
                        _strMainAccountID,
                        _strServiceCode,
                        _strServiceRegion,
                        _strServiceAccountID,
                        _strIPAddress});
            return ((Execute_Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginServiceAccount_CreateSimple(int _intServerIndex, string _strMainAccountID, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, string _strIPAddress, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ServiceAccount_CreateSimple", new object[] {
                        _intServerIndex,
                        _strMainAccountID,
                        _strServiceCode,
                        _strServiceRegion,
                        _strServiceAccountID,
                        _strIPAddress}, callback, asyncState);
        }
        
        /// <remarks/>
        public Execute_Result EndServiceAccount_CreateSimple(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Execute_Result)(results[0]));
        }
        
        /// <remarks/>
        public void ServiceAccount_CreateSimpleAsync(int _intServerIndex, string _strMainAccountID, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, string _strIPAddress) {
            this.ServiceAccount_CreateSimpleAsync(_intServerIndex, _strMainAccountID, _strServiceCode, _strServiceRegion, _strServiceAccountID, _strIPAddress, null);
        }
        
        /// <remarks/>
        public void ServiceAccount_CreateSimpleAsync(int _intServerIndex, string _strMainAccountID, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, string _strIPAddress, object userState) {
            if ((this.ServiceAccount_CreateSimpleOperationCompleted == null)) {
                this.ServiceAccount_CreateSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceAccount_CreateSimpleOperationCompleted);
            }
            this.InvokeAsync("ServiceAccount_CreateSimple", new object[] {
                        _intServerIndex,
                        _strMainAccountID,
                        _strServiceCode,
                        _strServiceRegion,
                        _strServiceAccountID,
                        _strIPAddress}, this.ServiceAccount_CreateSimpleOperationCompleted, userState);
        }
        
        private void OnServiceAccount_CreateSimpleOperationCompleted(object arg) {
            if ((this.ServiceAccount_CreateSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceAccount_CreateSimpleCompleted(this, new ServiceAccount_CreateSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ServiceAccount_GetAllEventLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Execute_DataTable_Result ServiceAccount_GetAllEventLog(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN) {
            object[] results = this.Invoke("ServiceAccount_GetAllEventLog", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _intServiceAccountSN});
            return ((Execute_DataTable_Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginServiceAccount_GetAllEventLog(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ServiceAccount_GetAllEventLog", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _intServiceAccountSN}, callback, asyncState);
        }
        
        /// <remarks/>
        public Execute_DataTable_Result EndServiceAccount_GetAllEventLog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Execute_DataTable_Result)(results[0]));
        }
        
        /// <remarks/>
        public void ServiceAccount_GetAllEventLogAsync(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN) {
            this.ServiceAccount_GetAllEventLogAsync(_intServerIndex, _strServiceCode, _strServiceRegion, _intServiceAccountSN, null);
        }
        
        /// <remarks/>
        public void ServiceAccount_GetAllEventLogAsync(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN, object userState) {
            if ((this.ServiceAccount_GetAllEventLogOperationCompleted == null)) {
                this.ServiceAccount_GetAllEventLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceAccount_GetAllEventLogOperationCompleted);
            }
            this.InvokeAsync("ServiceAccount_GetAllEventLog", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _intServiceAccountSN}, this.ServiceAccount_GetAllEventLogOperationCompleted, userState);
        }
        
        private void OnServiceAccount_GetAllEventLogOperationCompleted(object arg) {
            if ((this.ServiceAccount_GetAllEventLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceAccount_GetAllEventLogCompleted(this, new ServiceAccount_GetAllEventLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ServiceAccount_GetStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Execute_DataTable_Result ServiceAccount_GetStatus(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN) {
            object[] results = this.Invoke("ServiceAccount_GetStatus", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _intServiceAccountSN});
            return ((Execute_DataTable_Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginServiceAccount_GetStatus(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ServiceAccount_GetStatus", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _intServiceAccountSN}, callback, asyncState);
        }
        
        /// <remarks/>
        public Execute_DataTable_Result EndServiceAccount_GetStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Execute_DataTable_Result)(results[0]));
        }
        
        /// <remarks/>
        public void ServiceAccount_GetStatusAsync(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN) {
            this.ServiceAccount_GetStatusAsync(_intServerIndex, _strServiceCode, _strServiceRegion, _intServiceAccountSN, null);
        }
        
        /// <remarks/>
        public void ServiceAccount_GetStatusAsync(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN, object userState) {
            if ((this.ServiceAccount_GetStatusOperationCompleted == null)) {
                this.ServiceAccount_GetStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceAccount_GetStatusOperationCompleted);
            }
            this.InvokeAsync("ServiceAccount_GetStatus", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _intServiceAccountSN}, this.ServiceAccount_GetStatusOperationCompleted, userState);
        }
        
        private void OnServiceAccount_GetStatusOperationCompleted(object arg) {
            if ((this.ServiceAccount_GetStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceAccount_GetStatusCompleted(this, new ServiceAccount_GetStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ServiceAccount_GetStatusLock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Execute_DataTable_Result ServiceAccount_GetStatusLock(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN) {
            object[] results = this.Invoke("ServiceAccount_GetStatusLock", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _intServiceAccountSN});
            return ((Execute_DataTable_Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginServiceAccount_GetStatusLock(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ServiceAccount_GetStatusLock", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _intServiceAccountSN}, callback, asyncState);
        }
        
        /// <remarks/>
        public Execute_DataTable_Result EndServiceAccount_GetStatusLock(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Execute_DataTable_Result)(results[0]));
        }
        
        /// <remarks/>
        public void ServiceAccount_GetStatusLockAsync(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN) {
            this.ServiceAccount_GetStatusLockAsync(_intServerIndex, _strServiceCode, _strServiceRegion, _intServiceAccountSN, null);
        }
        
        /// <remarks/>
        public void ServiceAccount_GetStatusLockAsync(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN, object userState) {
            if ((this.ServiceAccount_GetStatusLockOperationCompleted == null)) {
                this.ServiceAccount_GetStatusLockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceAccount_GetStatusLockOperationCompleted);
            }
            this.InvokeAsync("ServiceAccount_GetStatusLock", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _intServiceAccountSN}, this.ServiceAccount_GetStatusLockOperationCompleted, userState);
        }
        
        private void OnServiceAccount_GetStatusLockOperationCompleted(object arg) {
            if ((this.ServiceAccount_GetStatusLockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceAccount_GetStatusLockCompleted(this, new ServiceAccount_GetStatusLockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ServiceAccount_GetRemainingPoints", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceAccount_GetRemainingPoints_Result ServiceAccount_GetRemainingPoints(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN) {
            object[] results = this.Invoke("ServiceAccount_GetRemainingPoints", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _intServiceAccountSN});
            return ((ServiceAccount_GetRemainingPoints_Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginServiceAccount_GetRemainingPoints(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ServiceAccount_GetRemainingPoints", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _intServiceAccountSN}, callback, asyncState);
        }
        
        /// <remarks/>
        public ServiceAccount_GetRemainingPoints_Result EndServiceAccount_GetRemainingPoints(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ServiceAccount_GetRemainingPoints_Result)(results[0]));
        }
        
        /// <remarks/>
        public void ServiceAccount_GetRemainingPointsAsync(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN) {
            this.ServiceAccount_GetRemainingPointsAsync(_intServerIndex, _strServiceCode, _strServiceRegion, _intServiceAccountSN, null);
        }
        
        /// <remarks/>
        public void ServiceAccount_GetRemainingPointsAsync(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN, object userState) {
            if ((this.ServiceAccount_GetRemainingPointsOperationCompleted == null)) {
                this.ServiceAccount_GetRemainingPointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceAccount_GetRemainingPointsOperationCompleted);
            }
            this.InvokeAsync("ServiceAccount_GetRemainingPoints", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _intServiceAccountSN}, this.ServiceAccount_GetRemainingPointsOperationCompleted, userState);
        }
        
        private void OnServiceAccount_GetRemainingPointsOperationCompleted(object arg) {
            if ((this.ServiceAccount_GetRemainingPointsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceAccount_GetRemainingPointsCompleted(this, new ServiceAccount_GetRemainingPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ServiceAccount_ChangePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Execute_Result ServiceAccount_ChangePassword(int _intServerIndex, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, string _strNewServiceAccountPassword, string _strIPAddress, string _strCreator) {
            object[] results = this.Invoke("ServiceAccount_ChangePassword", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _strServiceAccountID,
                        _strNewServiceAccountPassword,
                        _strIPAddress,
                        _strCreator});
            return ((Execute_Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginServiceAccount_ChangePassword(int _intServerIndex, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, string _strNewServiceAccountPassword, string _strIPAddress, string _strCreator, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ServiceAccount_ChangePassword", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _strServiceAccountID,
                        _strNewServiceAccountPassword,
                        _strIPAddress,
                        _strCreator}, callback, asyncState);
        }
        
        /// <remarks/>
        public Execute_Result EndServiceAccount_ChangePassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Execute_Result)(results[0]));
        }
        
        /// <remarks/>
        public void ServiceAccount_ChangePasswordAsync(int _intServerIndex, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, string _strNewServiceAccountPassword, string _strIPAddress, string _strCreator) {
            this.ServiceAccount_ChangePasswordAsync(_intServerIndex, _strServiceCode, _strServiceRegion, _strServiceAccountID, _strNewServiceAccountPassword, _strIPAddress, _strCreator, null);
        }
        
        /// <remarks/>
        public void ServiceAccount_ChangePasswordAsync(int _intServerIndex, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, string _strNewServiceAccountPassword, string _strIPAddress, string _strCreator, object userState) {
            if ((this.ServiceAccount_ChangePasswordOperationCompleted == null)) {
                this.ServiceAccount_ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceAccount_ChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ServiceAccount_ChangePassword", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _strServiceAccountID,
                        _strNewServiceAccountPassword,
                        _strIPAddress,
                        _strCreator}, this.ServiceAccount_ChangePasswordOperationCompleted, userState);
        }
        
        private void OnServiceAccount_ChangePasswordOperationCompleted(object arg) {
            if ((this.ServiceAccount_ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceAccount_ChangePasswordCompleted(this, new ServiceAccount_ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ServiceAccount_UpdateExpirationTime_Time", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Execute_Result ServiceAccount_UpdateExpirationTime_Time(int _intServerIndex, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, string _strExpirationTime) {
            object[] results = this.Invoke("ServiceAccount_UpdateExpirationTime_Time", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _strServiceAccountID,
                        _strExpirationTime});
            return ((Execute_Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginServiceAccount_UpdateExpirationTime_Time(int _intServerIndex, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, string _strExpirationTime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ServiceAccount_UpdateExpirationTime_Time", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _strServiceAccountID,
                        _strExpirationTime}, callback, asyncState);
        }
        
        /// <remarks/>
        public Execute_Result EndServiceAccount_UpdateExpirationTime_Time(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Execute_Result)(results[0]));
        }
        
        /// <remarks/>
        public void ServiceAccount_UpdateExpirationTime_TimeAsync(int _intServerIndex, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, string _strExpirationTime) {
            this.ServiceAccount_UpdateExpirationTime_TimeAsync(_intServerIndex, _strServiceCode, _strServiceRegion, _strServiceAccountID, _strExpirationTime, null);
        }
        
        /// <remarks/>
        public void ServiceAccount_UpdateExpirationTime_TimeAsync(int _intServerIndex, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, string _strExpirationTime, object userState) {
            if ((this.ServiceAccount_UpdateExpirationTime_TimeOperationCompleted == null)) {
                this.ServiceAccount_UpdateExpirationTime_TimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceAccount_UpdateExpirationTime_TimeOperationCompleted);
            }
            this.InvokeAsync("ServiceAccount_UpdateExpirationTime_Time", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _strServiceAccountID,
                        _strExpirationTime}, this.ServiceAccount_UpdateExpirationTime_TimeOperationCompleted, userState);
        }
        
        private void OnServiceAccount_UpdateExpirationTime_TimeOperationCompleted(object arg) {
            if ((this.ServiceAccount_UpdateExpirationTime_TimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceAccount_UpdateExpirationTime_TimeCompleted(this, new ServiceAccount_UpdateExpirationTime_TimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ServiceAccount_GetIndexData_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceAccount_GetIndexDataAll_Result ServiceAccount_GetIndexData_All(string _strServiceAccountID, string _strServiceCode, string _strServiceRegion) {
            object[] results = this.Invoke("ServiceAccount_GetIndexData_All", new object[] {
                        _strServiceAccountID,
                        _strServiceCode,
                        _strServiceRegion});
            return ((ServiceAccount_GetIndexDataAll_Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginServiceAccount_GetIndexData_All(string _strServiceAccountID, string _strServiceCode, string _strServiceRegion, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ServiceAccount_GetIndexData_All", new object[] {
                        _strServiceAccountID,
                        _strServiceCode,
                        _strServiceRegion}, callback, asyncState);
        }
        
        /// <remarks/>
        public ServiceAccount_GetIndexDataAll_Result EndServiceAccount_GetIndexData_All(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ServiceAccount_GetIndexDataAll_Result)(results[0]));
        }
        
        /// <remarks/>
        public void ServiceAccount_GetIndexData_AllAsync(string _strServiceAccountID, string _strServiceCode, string _strServiceRegion) {
            this.ServiceAccount_GetIndexData_AllAsync(_strServiceAccountID, _strServiceCode, _strServiceRegion, null);
        }
        
        /// <remarks/>
        public void ServiceAccount_GetIndexData_AllAsync(string _strServiceAccountID, string _strServiceCode, string _strServiceRegion, object userState) {
            if ((this.ServiceAccount_GetIndexData_AllOperationCompleted == null)) {
                this.ServiceAccount_GetIndexData_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceAccount_GetIndexData_AllOperationCompleted);
            }
            this.InvokeAsync("ServiceAccount_GetIndexData_All", new object[] {
                        _strServiceAccountID,
                        _strServiceCode,
                        _strServiceRegion}, this.ServiceAccount_GetIndexData_AllOperationCompleted, userState);
        }
        
        private void OnServiceAccount_GetIndexData_AllOperationCompleted(object arg) {
            if ((this.ServiceAccount_GetIndexData_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceAccount_GetIndexData_AllCompleted(this, new ServiceAccount_GetIndexData_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ServiceAccount_HourglassGetRemainingMinutes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceAccount_HourglassGetRemainingMinutes_Result ServiceAccount_HourglassGetRemainingMinutes(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN, out int _intRemainingMinutes, out System.DateTime _dtEndTime) {
            object[] results = this.Invoke("ServiceAccount_HourglassGetRemainingMinutes", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _intServiceAccountSN});
            _intRemainingMinutes = ((int)(results[1]));
            _dtEndTime = ((System.DateTime)(results[2]));
            return ((ServiceAccount_HourglassGetRemainingMinutes_Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginServiceAccount_HourglassGetRemainingMinutes(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ServiceAccount_HourglassGetRemainingMinutes", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _intServiceAccountSN}, callback, asyncState);
        }
        
        /// <remarks/>
        public ServiceAccount_HourglassGetRemainingMinutes_Result EndServiceAccount_HourglassGetRemainingMinutes(System.IAsyncResult asyncResult, out int _intRemainingMinutes, out System.DateTime _dtEndTime) {
            object[] results = this.EndInvoke(asyncResult);
            _intRemainingMinutes = ((int)(results[1]));
            _dtEndTime = ((System.DateTime)(results[2]));
            return ((ServiceAccount_HourglassGetRemainingMinutes_Result)(results[0]));
        }
        
        /// <remarks/>
        public void ServiceAccount_HourglassGetRemainingMinutesAsync(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN) {
            this.ServiceAccount_HourglassGetRemainingMinutesAsync(_intServerIndex, _strServiceCode, _strServiceRegion, _intServiceAccountSN, null);
        }
        
        /// <remarks/>
        public void ServiceAccount_HourglassGetRemainingMinutesAsync(int _intServerIndex, string _strServiceCode, string _strServiceRegion, int _intServiceAccountSN, object userState) {
            if ((this.ServiceAccount_HourglassGetRemainingMinutesOperationCompleted == null)) {
                this.ServiceAccount_HourglassGetRemainingMinutesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceAccount_HourglassGetRemainingMinutesOperationCompleted);
            }
            this.InvokeAsync("ServiceAccount_HourglassGetRemainingMinutes", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _intServiceAccountSN}, this.ServiceAccount_HourglassGetRemainingMinutesOperationCompleted, userState);
        }
        
        private void OnServiceAccount_HourglassGetRemainingMinutesOperationCompleted(object arg) {
            if ((this.ServiceAccount_HourglassGetRemainingMinutesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceAccount_HourglassGetRemainingMinutesCompleted(this, new ServiceAccount_HourglassGetRemainingMinutesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ServiceAccount_GetDBIndex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceAccount_GetDBIndex_Result ServiceAccount_GetDBIndex(int _intServerIndex, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID) {
            object[] results = this.Invoke("ServiceAccount_GetDBIndex", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _strServiceAccountID});
            return ((ServiceAccount_GetDBIndex_Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginServiceAccount_GetDBIndex(int _intServerIndex, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ServiceAccount_GetDBIndex", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _strServiceAccountID}, callback, asyncState);
        }
        
        /// <remarks/>
        public ServiceAccount_GetDBIndex_Result EndServiceAccount_GetDBIndex(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ServiceAccount_GetDBIndex_Result)(results[0]));
        }
        
        /// <remarks/>
        public void ServiceAccount_GetDBIndexAsync(int _intServerIndex, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID) {
            this.ServiceAccount_GetDBIndexAsync(_intServerIndex, _strServiceCode, _strServiceRegion, _strServiceAccountID, null);
        }
        
        /// <remarks/>
        public void ServiceAccount_GetDBIndexAsync(int _intServerIndex, string _strServiceCode, string _strServiceRegion, string _strServiceAccountID, object userState) {
            if ((this.ServiceAccount_GetDBIndexOperationCompleted == null)) {
                this.ServiceAccount_GetDBIndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceAccount_GetDBIndexOperationCompleted);
            }
            this.InvokeAsync("ServiceAccount_GetDBIndex", new object[] {
                        _intServerIndex,
                        _strServiceCode,
                        _strServiceRegion,
                        _strServiceAccountID}, this.ServiceAccount_GetDBIndexOperationCompleted, userState);
        }
        
        private void OnServiceAccount_GetDBIndexOperationCompleted(object arg) {
            if ((this.ServiceAccount_GetDBIndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceAccount_GetDBIndexCompleted(this, new ServiceAccount_GetDBIndexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ServiceAccount_GetIndexData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceAccount_GetIndexData_Result ServiceAccount_GetIndexData(string _strServiceAccountID, string _strServiceCode, string _strServiceRegion) {
            object[] results = this.Invoke("ServiceAccount_GetIndexData", new object[] {
                        _strServiceAccountID,
                        _strServiceCode,
                        _strServiceRegion});
            return ((ServiceAccount_GetIndexData_Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginServiceAccount_GetIndexData(string _strServiceAccountID, string _strServiceCode, string _strServiceRegion, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ServiceAccount_GetIndexData", new object[] {
                        _strServiceAccountID,
                        _strServiceCode,
                        _strServiceRegion}, callback, asyncState);
        }
        
        /// <remarks/>
        public ServiceAccount_GetIndexData_Result EndServiceAccount_GetIndexData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ServiceAccount_GetIndexData_Result)(results[0]));
        }
        
        /// <remarks/>
        public void ServiceAccount_GetIndexDataAsync(string _strServiceAccountID, string _strServiceCode, string _strServiceRegion) {
            this.ServiceAccount_GetIndexDataAsync(_strServiceAccountID, _strServiceCode, _strServiceRegion, null);
        }
        
        /// <remarks/>
        public void ServiceAccount_GetIndexDataAsync(string _strServiceAccountID, string _strServiceCode, string _strServiceRegion, object userState) {
            if ((this.ServiceAccount_GetIndexDataOperationCompleted == null)) {
                this.ServiceAccount_GetIndexDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceAccount_GetIndexDataOperationCompleted);
            }
            this.InvokeAsync("ServiceAccount_GetIndexData", new object[] {
                        _strServiceAccountID,
                        _strServiceCode,
                        _strServiceRegion}, this.ServiceAccount_GetIndexDataOperationCompleted, userState);
        }
        
        private void OnServiceAccount_GetIndexDataOperationCompleted(object arg) {
            if ((this.ServiceAccount_GetIndexDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceAccount_GetIndexDataCompleted(this, new ServiceAccount_GetIndexDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ServiceAccount_GetMainAccountID_Result {
        
        private int resultField;
        
        private string outstringField;
        
        private string mainAccountIDField;
        
        /// <remarks/>
        public int Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string Outstring {
            get {
                return this.outstringField;
            }
            set {
                this.outstringField = value;
            }
        }
        
        /// <remarks/>
        public string MainAccountID {
            get {
                return this.mainAccountIDField;
            }
            set {
                this.mainAccountIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ServiceAccount_GetIndexData_Result {
        
        private string serviceAccountID_DBField;
        
        private int serverIndexField;
        
        private int resultField;
        
        private string outstringField;
        
        /// <remarks/>
        public string ServiceAccountID_DB {
            get {
                return this.serviceAccountID_DBField;
            }
            set {
                this.serviceAccountID_DBField = value;
            }
        }
        
        /// <remarks/>
        public int ServerIndex {
            get {
                return this.serverIndexField;
            }
            set {
                this.serverIndexField = value;
            }
        }
        
        /// <remarks/>
        public int Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string Outstring {
            get {
                return this.outstringField;
            }
            set {
                this.outstringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ServiceAccount_GetDBIndex_Result {
        
        private int resultField;
        
        private string outstringField;
        
        private int serviceAccountSNField;
        
        private string dBIndexField;
        
        /// <remarks/>
        public int Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string Outstring {
            get {
                return this.outstringField;
            }
            set {
                this.outstringField = value;
            }
        }
        
        /// <remarks/>
        public int ServiceAccountSN {
            get {
                return this.serviceAccountSNField;
            }
            set {
                this.serviceAccountSNField = value;
            }
        }
        
        /// <remarks/>
        public string DBIndex {
            get {
                return this.dBIndexField;
            }
            set {
                this.dBIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ServiceAccount_HourglassGetRemainingMinutes_Result {
        
        private int remainingMinutesField;
        
        private System.DateTime endTimeField;
        
        private int resultField;
        
        private string outstringField;
        
        /// <remarks/>
        public int RemainingMinutes {
            get {
                return this.remainingMinutesField;
            }
            set {
                this.remainingMinutesField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public int Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string Outstring {
            get {
                return this.outstringField;
            }
            set {
                this.outstringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ServiceAccount_GetIndexDataAll_Result {
        
        private int resultField;
        
        private string outstringField;
        
        private int serviceAccountSNField;
        
        private int serverIndexField;
        
        private string dBIndexField;
        
        /// <remarks/>
        public int Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string Outstring {
            get {
                return this.outstringField;
            }
            set {
                this.outstringField = value;
            }
        }
        
        /// <remarks/>
        public int ServiceAccountSN {
            get {
                return this.serviceAccountSNField;
            }
            set {
                this.serviceAccountSNField = value;
            }
        }
        
        /// <remarks/>
        public int ServerIndex {
            get {
                return this.serverIndexField;
            }
            set {
                this.serverIndexField = value;
            }
        }
        
        /// <remarks/>
        public string DBIndex {
            get {
                return this.dBIndexField;
            }
            set {
                this.dBIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ServiceAccount_GetRemainingPoints_Result {
        
        private int resultField;
        
        private string outstringField;
        
        private int remainingPointsField;
        
        /// <remarks/>
        public int Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string Outstring {
            get {
                return this.outstringField;
            }
            set {
                this.outstringField = value;
            }
        }
        
        /// <remarks/>
        public int RemainingPoints {
            get {
                return this.remainingPointsField;
            }
            set {
                this.remainingPointsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Execute_DataTable_Result {
        
        private System.Data.DataSet resultDataField;
        
        private int resultField;
        
        private string outstringField;
        
        /// <remarks/>
        public System.Data.DataSet ResultData {
            get {
                return this.resultDataField;
            }
            set {
                this.resultDataField = value;
            }
        }
        
        /// <remarks/>
        public int Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string Outstring {
            get {
                return this.outstringField;
            }
            set {
                this.outstringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Execute_Result {
        
        private int resultField;
        
        private string outstringField;
        
        /// <remarks/>
        public int Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string Outstring {
            get {
                return this.outstringField;
            }
            set {
                this.outstringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ServiceAccount_GetMainAccountIDCompletedEventHandler(object sender, ServiceAccount_GetMainAccountIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceAccount_GetMainAccountIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceAccount_GetMainAccountIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceAccount_GetMainAccountID_Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceAccount_GetMainAccountID_Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ServiceAccount_CreateSimpleCompletedEventHandler(object sender, ServiceAccount_CreateSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceAccount_CreateSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceAccount_CreateSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Execute_Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Execute_Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ServiceAccount_GetAllEventLogCompletedEventHandler(object sender, ServiceAccount_GetAllEventLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceAccount_GetAllEventLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceAccount_GetAllEventLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Execute_DataTable_Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Execute_DataTable_Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ServiceAccount_GetStatusCompletedEventHandler(object sender, ServiceAccount_GetStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceAccount_GetStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceAccount_GetStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Execute_DataTable_Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Execute_DataTable_Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ServiceAccount_GetStatusLockCompletedEventHandler(object sender, ServiceAccount_GetStatusLockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceAccount_GetStatusLockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceAccount_GetStatusLockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Execute_DataTable_Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Execute_DataTable_Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ServiceAccount_GetRemainingPointsCompletedEventHandler(object sender, ServiceAccount_GetRemainingPointsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceAccount_GetRemainingPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceAccount_GetRemainingPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceAccount_GetRemainingPoints_Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceAccount_GetRemainingPoints_Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ServiceAccount_ChangePasswordCompletedEventHandler(object sender, ServiceAccount_ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceAccount_ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceAccount_ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Execute_Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Execute_Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ServiceAccount_UpdateExpirationTime_TimeCompletedEventHandler(object sender, ServiceAccount_UpdateExpirationTime_TimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceAccount_UpdateExpirationTime_TimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceAccount_UpdateExpirationTime_TimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Execute_Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Execute_Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ServiceAccount_GetIndexData_AllCompletedEventHandler(object sender, ServiceAccount_GetIndexData_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceAccount_GetIndexData_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceAccount_GetIndexData_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceAccount_GetIndexDataAll_Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceAccount_GetIndexDataAll_Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ServiceAccount_HourglassGetRemainingMinutesCompletedEventHandler(object sender, ServiceAccount_HourglassGetRemainingMinutesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceAccount_HourglassGetRemainingMinutesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceAccount_HourglassGetRemainingMinutesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceAccount_HourglassGetRemainingMinutes_Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceAccount_HourglassGetRemainingMinutes_Result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int _intRemainingMinutes {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.DateTime _dtEndTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ServiceAccount_GetDBIndexCompletedEventHandler(object sender, ServiceAccount_GetDBIndexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceAccount_GetDBIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceAccount_GetDBIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceAccount_GetDBIndex_Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceAccount_GetDBIndex_Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ServiceAccount_GetIndexDataCompletedEventHandler(object sender, ServiceAccount_GetIndexDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceAccount_GetIndexDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceAccount_GetIndexDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceAccount_GetIndexData_Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceAccount_GetIndexData_Result)(this.results[0]));
            }
        }
    }
}
